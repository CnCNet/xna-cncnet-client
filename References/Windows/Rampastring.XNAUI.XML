<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rampastring.XNAUI</name>
    </assembly>
    <members>
        <member name="T:Rampastring.XNAUI.AssetLoader">
            <summary>
            A static class that provides easy-to-use methods
            for loading and generating assets such as textures and sounds.
            </summary>
        </member>
        <member name="F:Rampastring.XNAUI.AssetLoader.AssetSearchPaths">
            <summary>
            A list of filesystem paths that assets are attempted to load from.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.Initialize(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Initializes the AssetLoader.
            </summary>
            <param name="gd">The graphics device.</param>
            <param name="content">The game content manager.</param>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.LoadTexture(System.String)">
            <summary>
            Loads a texture with the specific name. If the texture isn't found from any
            asset search path, returns a dummy texture.
            </summary>
            <param name="name">The name of the texture.</param>
            <returns>The texture if it was found and could be loaded, otherwise a dummy texture.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.LoadTextureUncached(System.String)">
            <summary>
            Loads a texture with the specific name. Does not look at textures in 
            the texture cache, and doesn't add loaded textures to the texture cache.
            </summary>
            <param name="name">The name of the texture.</param>
            <returns>The texture if it was found and could be loaded, otherwise a dummy texture.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.CreateDummyTexture">
            <summary>
            Creates and returns a 100x100 pink square.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.AssetExists(System.String)">
            <summary>
            Checks if a specified asset file exists.
            </summary>
            <param name="name">The name of the asset file.</param>
            <returns></returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.CreateTexture(Microsoft.Xna.Framework.Color,System.Int32,System.Int32)">
            <summary>
            Creates a one-colored texture.
            </summary>
            <param name="color">The color of the texture.</param>
            <param name="width">The width of the texture in pixels.</param>
            <param name="height">The height of the texture in pixels.</param>
            <returns>A texture.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.TextureFromImage(System.Drawing.Image)">
            <summary>
            Creates a texture from a <see cref="T:System.Drawing.Image"/>.
            Returns null if creating the texture fails.
            </summary>
            <param name="image">The image.</param>
            <returns>The created texture, or null if creating the texture fails.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.LoadSound(System.String)">
            <summary>
            Loads a sound effect with the given name.
            </summary>
            <param name="name">The name of the sound effect.</param>
            <returns>The loaded sound effect, or null if the sound effect isn't found.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.LoadSong(System.String)">
            <summary>
            Loads a <see cref="T:Microsoft.Xna.Framework.Media.Song"/> with the specified name.
            </summary>
            <param name="name">The name of the song.</param>
            <returns>The loaded song, or null if loading the song fails.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.GetColorFromString(System.String)">
            <summary>
            Creates a color based on a color string in the form "R,G,B" or "R,G,B,A". All values must be between 0 and 255.
            </summary>
            <param name="colorString">The color string in the form "R,G,B,A". All values must be between 0 and 255.</param>
            <returns>A XNA Color struct based on the given string.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.GetColorFromString(System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a color based on a color string in the form "R,G,B". All values must be between 0 and 255.
            Returns a given default color if parsing the given string fails.
            </summary>
            <param name="colorString">The color string.</param>
            <param name="defaultColor">The default color to return if parsing the string fails.</param>
            <returns>A XNA Color struct.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.AssetLoader.GetRGBAColorFromString(System.String)">
            <summary>
            Creates a color based on a color string in the form "R,G,B,A". All values must be between 0 and 255.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.GUICreator">
            <summary>
            Allows creating controls based on their internal names with the help 
            of reflection.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.GUICreator.AddControl(System.Type)">
            <summary>
            Adds a control type to the list of available control types.
            </summary>
            <param name="type">The control type to add. Needs to be a class type derived from XNAControl.</param>
        </member>
        <member name="M:Rampastring.XNAUI.GUICreator.CreateControl(Rampastring.XNAUI.WindowManager,System.String)">
            <summary>
            Creates and returns a control.
            </summary>
            <param name="windowManager">The WindowManager.</param>
            <param name="controlTypeName">The name of the control class type to create.</param>
            <returns>A control of the specified type.</returns>
        </member>
        <member name="T:Rampastring.XNAUI.EnhancedSoundEffect">
            <summary>
            A toggleable sound effect that can also have a defined priority
            and a decay rate for the priority.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.EnhancedSoundEffect.#ctor(System.String)">
            <summary>
            Creates a new prioritized sound. Loads the specified sound asset.
            </summary>
            <param name="assetName">The asset name of the sound file to load.</param>
        </member>
        <member name="M:Rampastring.XNAUI.EnhancedSoundEffect.#ctor(Microsoft.Xna.Framework.Audio.SoundEffect)">
            <summary>
            Creates a new enhanced sound. Uses the given sound assert.
            </summary>
            <param name="soundEffect">The sound effect.</param>
        </member>
        <member name="M:Rampastring.XNAUI.EnhancedSoundEffect.#ctor(System.String,System.Double,System.Double,System.Single)">
            <summary>
            Creates a new enhanced sound. Loads the specified sound asset.
            </summary>
            <param name="assetName">The asset name of the sound file to load.</param>
            <param name="priority">The priority of this sound</param>
            <param name="priorityDecayRate">The priority decay rate of this sound.</param>
            <param name="repeatPrevention">If set above zero, will prevent the sound from being played again
            for the specified number of seconds after it has been played.</param>
        </member>
        <member name="P:Rampastring.XNAUI.EnhancedSoundEffect.Enabled">
            <summary>
            Gets or sets a bool that determines whether this sound is enabled.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.EnhancedSoundEffect.Priority">
            <summary>
            The priority of this sound.
            While this sound is playing, sounds with less priority than this sound's
            priority will not be played.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.EnhancedSoundEffect.PriorityDecayRate">
            <summary>
            The decay rate of this sound's priority.
            The sound's priority will be reduced by the specified number each second.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.EnhancedSoundEffect.RepeatPrevention">
            <summary>
            If set above zero, will prevent the sound from being played again
            for the specified number of seconds after it has been played.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.EnhancedSoundEffect.Play">
            <summary>
            Plays this sound if it's enabled.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.EnhancedSoundEffect.Dispose">
            <summary>
            Disposes the sound effect.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PrioritizedSoundInstance.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the priority of the sound. Returns true if the sound effect is
            still playing, otherwise false.
            </summary>
            <param name="gameTime">Tells how much time has passed since the previous frame.</param>
            <returns>True if the sound effect is still playing, otherwise false.</returns>
        </member>
        <member name="T:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager">
            <summary>
            Manages the game window on Windows.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.CenterOnScreen">
            <summary>
            Centers the game window on the screen.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.SetBorderlessMode(System.Boolean)">
            <summary>
            Enables or disables borderless windowed mode.
            </summary>
            <param name="value">A boolean that determines whether borderless 
            windowed mode should be enabled.</param>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.MinimizeWindow">
            <summary>
            Minimizes the game window.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.MaximizeWindow">
            <summary>
            Maximizes the game window.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.HideWindow">
            <summary>
            Hides the game window.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.ShowWindow">
            <summary>
            Shows the game window.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.FlashWindow">
            <summary>
            Flashes the game window on the taskbar.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.SetIcon(System.String)">
            <summary>
            Sets the icon of the game window to an icon that exists on a specific
            file path.
            </summary>
            <param name="path">The path to the icon file.</param>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.GetWindowHandle">
            <summary>
            Returns the IntPtr handle of the game window on Windows.
            On other platforms, returns IntPtr.Zero.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.SetControlBox(System.Boolean)">
            <summary>
            Enables or disables the "control box" (minimize/maximize/close buttons) for the game form.
            </summary>
            <param name="value">True to enable the control box, false to disable it.</param>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.PreventClosing">
            <summary>
            Prevents the user from closing the game form by Alt-F4.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.PlatformSpecific.WindowsGameWindowManager.AllowClosing">
            <summary>
            Allows the user to close the game form by Alt-F4.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.RenderTargetStack">
            <summary>
            Handles render targets.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.RMath">
            <summary>
            Contains static vector math functions.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.RMath.AngleFromVector(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns the angle / direction of a vector in radians.
            </summary>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Rampastring.XNAUI.RMath.VectorFromLengthAndAngle(System.Single,System.Single)">
            <summary>
            Creates and returns a new vector with the given length and angle.
            </summary>
            <param name="length">The length of the vector.</param>
            <param name="angle">The angle of the vector.</param>
        </member>
        <member name="T:Rampastring.XNAUI.SoundPlayer">
            <summary>
            A sound player that manages prioritized sounds, with the aim of preventing
            insignificant sounds from overriding important sounds while still
            playing insignificant sounds if there's no risk of them cutting off
            important sounds.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.SoundPlayer.Play(Rampastring.XNAUI.EnhancedSoundEffect)">
            <summary>
            Plays a sound.
            </summary>
            <param name="sound">The sound to play.</param>
        </member>
        <member name="M:Rampastring.XNAUI.SoundPlayer.PlayWithVolume(System.Single,Rampastring.XNAUI.EnhancedSoundEffect)">
            <summary>
            Plays a sound with the specified volume.
            </summary>
            <param name="volume">The volume that the sound will be played at.</param>
            <param name="sound">The sound to play.</param>
        </member>
        <member name="F:Rampastring.XNAUI.XNAControls.ControlDrawMode.NORMAL">
            <summary>
            The control is drawn on the same render target with its parent.
            </summary>
        </member>
        <member name="F:Rampastring.XNAUI.XNAControls.ControlDrawMode.UNIQUE_RENDER_TARGET">
            <summary>
            The control is drawn on its own render target.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNALinkLabel">
            <summary>
            A label that is underlined and changes its color when hovered on.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNALinkLabel.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new link label.
            </summary>
            <param name="windowManager">The window manager.</param>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNALinkLabel.IdleColor">
            <summary>
            The color of the label when it's not hovered on.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNALinkLabel.HoverColor">
            <summary>
            The color of the label when it's hovered on.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNALinkLabel.DrawUnderline">
            <summary>
            Determines whether the label's text is drawn as underlined.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBoxItem.Tag">
            <summary>
            Stores optional custom data associated with the list box item.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAPasswordBox">
            <summary>
            A text box that displays its characters as a different character 
            (a star by default), regardless of what the characters actually are.
            In other words, a text box for inputting passwords.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAPasswordBox.VisibleChar">
            <summary>
            The character that is displayed in place of all other characters.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAPasswordBox.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new XNAPasswordBox.
            </summary>
            <param name="wm">The WindowManager.</param>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAPasswordBox.Password">
            <summary>
            Gets or sets the real text of the password box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAPasswordBox.Text">
            <summary>
            Gets the visible string of the password box.
            If set, changes the actual text / password in the box.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAScrollBar">
            <summary>
            A vertical scroll bar, mainly for list boxes but it could also be utilized
            by other controls.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new scroll bar.
            </summary>
            <param name="windowManager">The game window manager.</param>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAScrollBar.Scrolled">
            <summary>
            Raised when the scroll bar is scrolled. 
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAScrollBar.ScrolledToBottom">
            <summary>
            Raised when the scroll bar is scrolled and it reaches its lowest value.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAScrollBar.Length">
            <summary>
            The height of the entire scrollable area.
            For example in a list box, the sum of the height of its items.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAScrollBar.DisplayedPixelCount">
            <summary>
            The number of pixels that the scrollable parent control
            is able to display at once.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAScrollBar.ViewTop">
            <summary>
            The scroll bar's current position.
            The parent of the scroll-bar has to keep the scrollbar up-to-date when the 
            view of the parent changes.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAScrollBar.ScrollStep">
            <summary>
            How many pixels to scroll at once.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAScrollBar.ScrollWidth">
            <summary>
            Returns the width of the scroll bar.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.BtnScrollUp_LeftClick(System.Object,System.EventArgs)">
            <summary>
            Scrolls up when the user presses on the "scroll up" arrow.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.BtnScrollDown_LeftClick(System.Object,System.EventArgs)">
            <summary>
            Scrolls down when the user presses on the "scroll down" arrow.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.IsDrawn">
            <summary>
            Returns a bool that tells whether there's enough items in a list for 
            the scrollbar to be drawn.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.Refresh">
            <summary>
            Refreshes the scroll bar's thumb size.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.OnLeftClick">
            <summary>
            Scrolls the scrollbar when it's clicked on.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.OnMouseMove">
            <summary>
            Scrolls the scrollbar if the user presses the mouse left button
            while moving the cursor over the scrollbar.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.RefreshButtonY(System.Int32)">
            <summary>
            Updates the top item index of the scroll bar,
            and the vertical position of the scroll bar's thumb.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.RefreshButtonY">
            <summary>
            Updates the vertical position of the scroll bar's thumb.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the scroll bar's logic each frame.
            Makes it possible to drag the scrollbar thumb even if the cursor
            leaves the scroll bar's surface.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAScrollBar.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the scroll bar.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNASuggestionTextBox">
            <summary>
            A text box that displays a "suggestion" text when it's not active.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNATextBlock">
            <summary>
            A panel with text.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNATextBox">
            <summary>
            A text input control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATextBox.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new text box.
            </summary>
            <param name="windowManager">The WindowManager that will be associated with this control.</param>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNATextBox.EnterPressed">
            <summary>
            Raised when the user presses the Enter key while this text box is the
            selected control.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNATextBox.InputReceived">
            <summary>
            Raised when the text box receives input that changes its text.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNATextBox.TextChanged">
            <summary>
            Raised whenever the text of the text box is changed, by the user or
            programmatically.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.TextColor">
            <summary>
            The color of the text in the text box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.IdleBorderColor">
            <summary>
            The color of the text box border when the text box is inactive.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.ActiveBorderColor">
            <summary>
            The color of the text box border when the text box is selected.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.BackColor">
            <summary>
            The color of the text box background.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.FontIndex">
            <summary>
            The index of the spritefont that this textbox uses.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.MaximumTextLength">
            <summary>
            The maximum length of the text of this text box, in characters.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.Text">
            <summary>
            The text on the text box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.InputPosition">
            <summary>
            The input character index inside the textbox text.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.TextStartPosition">
            <summary>
            The start character index of the visible part of the text string.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATextBox.TextEndPosition">
            <summary>
            The end character index of the visible part of the text string.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATextBox.Initialize">
            <summary>
            Initializes the text box.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATextBox.AllowCharacterInput(System.Char)">
            <summary>
            Determines if the user is allowed to type a specific character into the textbox.
            </summary>
            <param name="character">The character.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATextBox.HandleKeyPress(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Handles a key press while the text box is the selected control.
            Can be overridden in derived classes to handle additional key presses.
            </summary>
            <param name="key">The key that was pressed.</param>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.Callback">
            <summary>
            A callback for storing a delegate and its parameters.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAButton">
            <summary>
            A basic button.
            </summary>
        </member>
        <member name="F:Rampastring.XNAUI.XNAControls.XNAButton.textColor">
            <summary>
            The current color of the button's text.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNACheckBox">
            <summary>
            A check-box.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNACheckBox.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new check box.
            </summary>
            <param name="windowManager">The window manager.</param>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.CheckSoundEffect">
            <summary>
            The sound effect that is played when the check box is clicked on.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.HoverSoundEffect">
            <summary>
            The sound effect that is played when the cursor enters the check box's area.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.Checked">
            <summary>
            Determines whether the check box is currently checked.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.AllowChecking">
            <summary>
            Determines whether the user can (un)check the box by clicking on it.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.FontIndex">
            <summary>
            The index of the text font.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.TextPadding">
            <summary>
            The space, in pixels, between the check box and its text.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.IdleColor">
            <summary>
            The color of the check box's text when it's not hovered on.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.HighlightColor">
            <summary>
            The color of the check box's text when it's hovered on.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.Text">
            <summary>
            Gets or sets the text of the check box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNACheckBox.TextLocationY">
            <summary>
            The Y coordinate of the check box text
            relative to the location of the check box.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNACheckBox.SetTextPositionAndSize">
            <summary>
            Updates the size of the check box and the vertical position of its text.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNACheckBox.OnLeftClick">
            <summary>
            Handles left mouse button clicks on the check box.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNACheckBox.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the check box's alpha each frame.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNACheckBox.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the check box.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAContextMenuItem">
            <summary>
            A context menu item.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.Text">
            <summary>
            The text of the context menu item.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.Selectable">
            <summary>
            Determines whether the context menu item is enabled
            (can be clicked on).
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.Visible">
            <summary>
            Determines whether the context menu item is visible.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.Height">
            <summary>
            The height of the context menu item.
            If null, the common item height is used.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.FontIndex">
            <summary>
            The font index of the context menu item.
            If null, the common font index is used.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.Texture">
            <summary>
            The texture of the context menu item.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.BackgroundColor">
            <summary>
            The background color of the context menu item.
            If null, the common background color is used.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.TextColor">
            <summary>
            The color of the context menu item's text.
            If null, the common text color is used.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.SelectAction">
            <summary>
            The method that is called when the item is selected.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.SelectableChecker">
            <summary>
            When the context menu is shown, this function is called
            to determine whether this item should be selectable. 
            If null, the value of the Enabled property is not changed.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.VisibilityChecker">
            <summary>
            When the context menu is shown, this function is called
            to determine whether this item should be visible.
            If null, the value of the Visible property is not changed.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAContextMenuItem.TextY">
            <summary>
            The Y position of the item's text.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAContextMenu">
            <summary>
            A context menu.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAContextMenu.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new context menu.
            </summary>
            <param name="windowManager">The WindowManager associated with this context menu.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAContextMenu.AddItem(Rampastring.XNAUI.XNAControls.XNAContextMenuItem)">
            <summary>
            Adds an item into the context menu.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAContextMenu.AddItem(System.String)">
            <summary>
            Generates and adds an item with the specified text into the context menu.
            </summary>
            <param name="text">The text of the item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAContextMenu.GetItemIndexOnCursor">
            <summary>
            Returns the index of the item that the cursor currently points to.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAContextMenu.GetItemHeight(Rampastring.XNAUI.XNAControls.XNAContextMenuItem)">
            <summary>
            Gets the height of a context menu item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAContextMenu.GetItemFontIndex(Rampastring.XNAUI.XNAControls.XNAContextMenuItem)">
            <summary>
            Gets the index of an item's font.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAContextMenu.DrawItem(System.Int32,Microsoft.Xna.Framework.Point)">
            <summary>
            Draws a single context menu item.
            Returns the height of the item.
            This can be overriden in derived classes to customize the drawing code.
            </summary>
            <param name="index">The index of the item to draw.</param>
            <param name="point">The point (relative to the control) where to draw the item.</param>
            <returns>The height of the item that was drawn.</returns>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNADropDown">
            <summary>
            A drop-down control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new drop-down control.
            </summary>
            <param name="windowManager">The WindowManager associated with this control.</param>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNADropDown.IndexReselected">
            <summary>
            Raised when the user re-selects an already selected drop-down item.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNADropDown.ItemHeight">
            <summary>
            The height of drop-down items.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNADropDown.DropDownState">
            <summary>
            Gets or sets the dropped-down status of the drop-down control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNADropDown.AllowDropDown">
            <summary>
            Controls whether the drop-down control can be dropped down.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNADropDown.SelectedIndex">
            <summary>
            Gets or sets the selected index of the drop-down control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNADropDown.SelectedItem">
            <summary>
            Gets the currently selected item of the drop-down control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNADropDown.OpenUp">
            <summary>
            If set, the drop-down is opened upwards rather than downwards.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.AddItem(Rampastring.XNAUI.XNAControls.XNADropDownItem)">
            <summary>
            Adds an item into the drop-down.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.AddItem(System.String)">
            <summary>
            Generates and adds an item with the specified text into the drop-down.
            </summary>
            <param name="text">The text of the item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.AddItem(System.String,Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Generates and adds an item with the specified text and texture
            into the drop-down.
            </summary>
            <param name="text">The text of the item.</param>
            <param name="texture">The item's texture.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.AddItem(System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            Generates and adds an item with the specified text
            and text color into the drop-down control.
            </summary>
            <param name="text">The text of the item.</param>
            <param name="color">The color of the item's text.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.GetItemTextColor(Rampastring.XNAUI.XNAControls.XNADropDownItem)">
            <summary>
            Gets the text color of a drop-down item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.GetItemIndexOnCursor">
            <summary>
            Returns the index of the item that the cursor currently points to.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the drop-down.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNADropDown.DrawItem(System.Int32,System.Int32)">
            <summary>
            Draws a single drop-down item.
            This can be overridden in derived classes to customize the drawing code.
            </summary>
            <param name="index">The index of the item to be drawn.</param>
            <param name="y">The Y coordinate of the item's top border.</param>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAControl">
            <summary>
            The base class for a XNA-based UI control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new control instance.
            </summary>
            <param name="windowManager">The WindowManager associated with this control.</param>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.WindowManager">
            <summary>
            Gets the window manager associated with this control.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.MouseEnter">
            <summary>
            Raised when the mouse cursor enters the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.MouseLeftDown">
            <summary>
            Raised once when the left mouse button is pressed down while the
            cursor is inside the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.MouseRightDown">
            <summary>
            Raised once when the right mouse button is pressed down while the
            cursor is inside the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.MouseLeave">
            <summary>
            Raised when the mouse cursor leaves the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.MouseMove">
            <summary>
            Raised when the mouse cusor moves while inside the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.MouseScrolled">
            <summary>
            Raised when the scroll wheel is used while the cursor is inside
            the control.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.LeftClick">
            <summary>
            Raised when the left mouse button is clicked (pressed and released)
            while the cursor is inside the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.DoubleLeftClick">
            <summary>
            Raised when the left mouse button is clicked twice in a short
            time-frame while the cursor is inside the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.RightClick">
            <summary>
            Raised when the right mouse button is clicked (pressed and released)
            while the cursor is inside the control's area.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.ClientRectangleUpdated">
            <summary>
            Raised when the control's client rectangle is changed.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.SelectedChanged">
            <summary>
            Raised when the control is selected or un-selected.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNAControl.ParentChanged">
            <summary>
            Raised when the control's parent is changed.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Parent">
            <summary>
            Gets or sets the parent of this control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Detached">
            <summary>
            Set if the control is detached from its parent.
            A detached control's mouse input is handled independently
            from its parent, ie. it can grow beyond its parent's area
            rectangle and still handle input correctly.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Cursor">
            <summary>
            Holds a reference to the cursor.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Keyboard">
            <summary>
            Holds a reference to the keyboard.
            </summary>
        </member>
        <member name="F:Rampastring.XNAUI.XNAControls.XNAControl._children">
            <summary>
            A list of the control's children. Don't add children to this list directly;
            call the AddChild method instead.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Children">
            <summary>
            A read-only list of the control's children. 
            Call the AddChild method to add children to the control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.ClientRectangle">
            <summary>
            The display rectangle of the control inside its parent.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnClientRectangleUpdated">
            <summary>
            Called when the control's client rectangle is changed.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.X">
            <summary>
            The X-coordinate of the control relative to its parent's location.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Y">
            <summary>
            The Y-coordinate of the control relative to its parent's location.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Width">
            <summary>
            The width of the control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Height">
            <summary>
            The height of the control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Bottom">
            <summary>
            Shortcut for accessing ClientRectangle.Bottom.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Right">
            <summary>
            Shortcut for accessing ClientRectangle.Right.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Name">
            <summary>
            Gets or sets the name of this control. The name is only an identifier
            and does not affect functionality.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Focused">
            <summary>
            Determines whether the control should block other controls on the screen
            from being interacted with.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.InputEnabled">
            <summary>
            Determines whether this control is able to handle input.
            If set to false, input management will ignore this control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.IsActive">
            <summary>
            Gets or sets a bool that determines whether this control is the current focus of the mouse cursor.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.DrawMode">
            <summary>
            The draw mode of the control.
            Cannot be changed after the control's <see cref="M:Rampastring.XNAUI.XNAControls.XNAControl.Initialize"/>
            method has been run.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.IsChangingSize">
            <summary>
            If set to true and the control has 
            <see cref="P:Rampastring.XNAUI.XNAControls.XNAControl.DrawMode"/> == <see cref="F:Rampastring.XNAUI.XNAControls.ControlDrawMode.UNIQUE_RENDER_TARGET"/>,
            the control won't try to update its render target when its size is changed.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAControl.Initialized">
            <summary>
            Determines whether the control's <see cref="M:Rampastring.XNAUI.XNAControls.XNAControl.Initialize"/> method
            has been called yet.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.IsLastParentActive">
            <summary>
            Checks if the last parent of this control is active.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.AppliesToSelfAndAllParents(System.Func{Rampastring.XNAUI.XNAControls.XNAControl,System.Boolean})">
            <summary>
            Checks whether a condition applies to this control and all of its parents.
            </summary>
            <param name="func">The condition.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.GetCursorPoint">
            <summary>
            Gets the cursor's location relative to this control's location.
            </summary>
            <returns>A point that represents the cursor's location relative to this control's location.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.GetWindowPoint">
            <summary>
            Gets the location of the control's top-left corner within the game window.
            Use for input handling; for rendering, use <see cref="M:Rampastring.XNAUI.XNAControls.XNAControl.GetRenderPoint"/> instead.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.GetWindowRectangle">
            <summary>
            Gets the control's client area within the game window.
            Use for input handling; for rendering, use <see cref="M:Rampastring.XNAUI.XNAControls.XNAControl.RenderRectangle"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.RenderRectangle">
            <summary>
            Returns the draw area of the control relative to the used render target.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.GetRenderPoint">
            <summary>
            Gets the location of the control's top-left corner within the current render target.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.CenterOnParent">
            <summary>
            Centers the control on the middle of its parent's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.CenterOnParentHorizontally">
            <summary>
            Centers the control horizontally on the middle of its parent's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.CenterOnControlVertically(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Centers the control vertically in proportion to another control.
            Assumes that this control and the other control share the same parent control.
            </summary>
            <param name="control">The other control.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Detach">
            <summary>
            Detaches the control from its parent.
            See <see cref="P:Rampastring.XNAUI.XNAControls.XNAControl.Detached"/>.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Attach">
            <summary>
            Attaches the control to its parent.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.AddCallback(System.Delegate,System.Object[])">
            <summary>
            Schedules a delegate to be executed on the next game loop frame, 
            on the main game thread.
            </summary>
            <param name="d">The delegate.</param>
            <param name="args">The arguments to be passed on to the delegate.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.AddChild(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Adds a child to the control.
            In case the control is currently being updated, schedules the child
            to be added at the end of the current frame.
            </summary>
            <param name="child">The child control.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.AddChildWithoutInitialize(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Adds a child control to the control without calling the child's Initialize method.
            In case the control is currently being updated, schedules the child
            to be added at the end of the current frame.
            </summary>
            <param name="child">The child control.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.AddChildImmediate(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Immediately adds a child control to the control.
            </summary>
            <param name="child">The child control.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.AddChildImmediateWithoutInitialize(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Immediately adds a child control to the control without calling the child's Initialize method.
            </summary>
            <param name="child">The child control.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.AddChildToFirstIndexImmediate(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Adds a child control to the control, making the added child
            the "first child" of this control.
            </summary>
            <param name="child">The child control.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.RemoveChild(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Removes a child from the control.
            </summary>
            <param name="child">The child control to remove.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.RemoveChildImmediate(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Immediately removes a child from the control.
            </summary>
            <param name="child">The child control to remove.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Initialize">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Disable">
            <summary>
            Disables and hides the control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Enable">
            <summary>
            Enables and shows the control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Kill">
            <summary>
            Destroys the control and all child controls to free up resources.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the control's logic and handles input.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawInternal(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the control.
            DO NOT call manually unless you know what you're doing.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the control and its child controls.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawChildren(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the control's child controls.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a texture relative to the control's location.
            </summary>
            <param name="texture">The texture.</param>
            <param name="rectangle">The rectangle where to draw the texture
            relative to the control.</param>
            <param name="color">The remap color.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a texture relative to the control's location.
            </summary>
            <param name="texture">The texture.</param>
            <param name="point">The point where to draw the texture
            relative to the control.</param>
            <param name="color">The remap color.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a texture relative to the control's location
            within the used render target.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a texture relative to the control's location.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawString(System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a string relative to the control's location.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawStringWithShadow(System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a string with a shadow, relative to the control's location.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawRectangle(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draws a rectangle's borders relative to the control's location
            with the given color and thickness.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="color">The color.</param>
            <param name="thickness">The thickness of the rectangle's borders.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.FillControlArea(Microsoft.Xna.Framework.Color)">
            <summary>
            Fills the control's drawing area with the given color.
            </summary>
            <param name="color">The color to fill the area with.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.FillRectangle(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Fills a rectangle relative to the control's location with the given color.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="color">The color to fill the rectangle with.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.DrawLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draws a line relative to the control's location.
            </summary>
            <param name="start">The start point of the line.</param>
            <param name="end">The end point of the line.</param>
            <param name="color">The color of the line.</param>
            <param name="thickness">The thickness of the line.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnMouseEnter">
            <summary>
            Called when the mouse cursor enters the control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnMouseLeave">
            <summary>
            Called when the mouse cursor leaves the control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnMouseLeftDown">
            <summary>
            Called once when the left mouse button is pressed down while the cursor
            is on the control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnMouseRightDown">
            <summary>
            Called once when the right mouse button is pressed down while the cursor
            is on the control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnLeftClick">
            <summary>
            Called when the left mouse button has been 
            clicked on the control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnDoubleLeftClick">
            <summary>
            Called when the left mouse button has been 
            clicked twice on the control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnRightClick">
            <summary>
            Called when the right mouse button has been 
            clicked on the control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnMouseMove">
            <summary>
            Called when the mouse moves on the control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnMouseOnControl(Rampastring.XNAUI.XNAControls.MouseEventArgs)">
            <summary>
            Called on each frame while the mouse is on the control's
            client rectangle.
            </summary>
            <param name="eventArgs">Mouse event arguments.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnMouseScrolled">
            <summary>
            Called when the scroll wheel has been scrolled on the 
            control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAControl.OnSelectedChanged">
            <summary>
            Called when the control's status as the selected (last-clicked)
            control has been changed.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNADropDownItem">
            <summary>
            A drop-down / context menu item.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNADropDownItem.Tag">
            <summary>
            An object for containing custom info in the drop down item.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNALabel">
            <summary>
            A static label control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNALabel.AnchorPoint">
            <summary>
            Determines the point that the text is placed around
            depending on TextAnchor.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNALabel.TextAnchor">
            <summary>
            Determines the position of the label's text relative to AnchorPoint.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.LabelTextAnchorInfo">
            <summary>
            An enum for determining which part of a text is anchored to a specific point.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAListBox">
            <summary>
            A list box.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new list box instance.
            </summary>
            <param name="windowManager"></param>
        </member>
        <member name="F:Rampastring.XNAUI.XNAControls.XNAListBox.Items">
            <summary>
            Returns the list of items in the list box.
            If you manipulate the list directly, call
            RefreshScrollbar afterwards.
            TODO change to ObservableCollection?
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.LineHeight">
            <summary>
            Gets or sets the height of a single line of text in the list box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.AllowMultiLineItems">
            <summary>
            If set to false, only the first line will be displayed from items
            that are long enough to cover more than one line. Changing this
            only affects new items in the list box; existing items are not
            truncated!
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.AllowKeyboardInput">
            <summary>
            If set to true, the user is able to scroll the listbox items
            by using keyboard keys.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.TextBorderDistance">
            <summary>
            Gets or sets the distance between the text of a list box item
            and the list box border in pixels.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.SelectedItem">
            <summary>
            Gets the currently selected list box item.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.NumberOfLinesOnList">
            <summary>
            Returns the number of text lines that can fit on the list box at a time.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.EnableScrollbar">
            <summary>
            Controls whether the integrated listbox scrollbar is used.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.AllowRightClickUnselect">
            <summary>
            Gets or sets a bool that determines whether the user is able to un-select
            the currently selected listbox item by right-clicking on the list box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAListBox.DrawSelectionUnderScrollbar">
            <summary>
            Controls whether the highlighted background of the selected item should
            be drawn under the scrollbar area.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.AddItem(System.String)">
            <summary>
            Adds a selectable item to the list box with the default item color.
            </summary>
            <param name="text">The text of the item.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.AddItem(Rampastring.XNAUI.XNAControls.XNAListBoxItem)">
            <summary>
            Adds an item into the list box.
            </summary>
            <param name="listBoxItem">The item to add.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.RefreshScrollbar">
            <summary>
            Refreshes the scroll bar's status. Call when list box items are modified.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.GetTotalLineCount">
            <summary>
            Returns the total amount of lines in all list box items combined.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.IsScrolledToBottom">
            <summary>
            Checks whether the list box is scrolled so that
            the last item in the list is entirely visible.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.ScrollToBottom">
            <summary>
            Scrolls the list box so that the last item is entirely visible.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.Initialize">
            <summary>
            Initializes the list box.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.GetScrollBarWidth">
            <summary>
            Returns the width of the list box's scroll bar.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.Keyboard_OnKeyPressed(System.Object,Rampastring.XNAUI.Input.KeyPressEventArgs)">
            <summary>
            Allows copying items to the clipboard using Ctrl + C.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.HandleCharInput(System.Char)">
            <summary>
            Allows the user to select items by selecting the list box and then
            pressing the first letter of the item's text.
            </summary>
            <param name="character">The entered character.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.HandleScrollKeyDown(Microsoft.Xna.Framework.GameTime,System.Action)">
            <summary>
            Handles input from scrolling keys.
            </summary>
            <param name="gameTime">GameTime.</param>
            <param name="action">The action to execute when scrolling.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.ScrollUp">
            <summary>
            Handles scrolling by holding down the up arrow key.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.ScrollDown">
            <summary>
            Handles scrolling by holding down the down arrow key.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.OnMouseScrolled">
            <summary>
            Handles input from a scroll wheel.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.OnMouseOnControl(Rampastring.XNAUI.XNAControls.MouseEventArgs)">
            <summary>
            Updates the hovered item index while the cursor is on this control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.OnRightClick">
            <summary>
            Clears the selection on right-click.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.OnMouseLeftDown">
            <summary>
            Selects an item when the user left-clicks on this control.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.OnMouseLeave">
            <summary>
            Updates the hovered index when the mouse cursor leaves this control's client rectangle.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.GetItemIndexOnCursor(Microsoft.Xna.Framework.Point)">
            <summary>
            Returns the index of the list box item that the cursor is
            currently pointing at, or -1 if the cursor doesn't point at any item
            of this list box.
            </summary>
            <param name="mouseLocation">The location of the cursor relative 
            to this control.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAListBox.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the list box and its items.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox">
            <summary>
            A list box with multiple columns.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new multi-column list box.
            </summary>
            <param name="windowManager">The WindowManager.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.XNAMultiColumnListBox_ClientRectangleUpdated(System.Object,System.EventArgs)">
            <summary>
            Adjusts the positions and sizes of the columns
            when the size of the list box is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected list box item.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.AllowKeyboardInput">
            <summary>
            If set to true, the user is able to scroll the listbox items
            by using keyboard keys.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.TopIndex">
            <summary>
            Gets or sets the index of the first visible item in the list box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.LastIndex">
            <summary>
            Gets the index of the last visible item in the list box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.ItemCount">
            <summary>
            Gets the number of items on the list box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.AllowRightClickUnselect">
            <summary>
            Gets or sets a bool that determines whether the user is able to un-select
            the currently selected listbox item by right-clicking on the list box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.DrawSelectionUnderScrollbar">
            <summary>
            Controls whether the highlighted background of the selected item should
            be drawn under the scrollbar area.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.ChangeColumnWidth(System.Int32,System.Int32)">
            <summary>
            Changes the width of a column and adjusts the positions
            of the following columns accordingly.
            </summary>
            <param name="columnIndex">The index of the column.</param>
            <param name="width">The new width of the column.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.AddColumn(System.String,System.Int32)">
            <summary>
            Creates a column with the given header text and width.
            </summary>
            <param name="headerText"></param>
            <param name="width"></param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.AddColumn(Rampastring.XNAUI.XNAControls.XNAPanel)">
            <summary>
            Creates a column with the given header and an automatically generated list box.
            The width of the header defines the width of the list box.
            </summary>
            <param name="header">The header panel.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.AddColumn(Rampastring.XNAUI.XNAControls.XNAPanel,Rampastring.XNAUI.XNAControls.XNAListBox)">
            <summary>
            Creates a column with the given header and list box.
            </summary>
            <param name="header">The header panel.</param>
            <param name="listBox">The list box.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNAMultiColumnListBox.IsValidIndexSelected">
            <summary>
            Checks whether an item is selected in the list box.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNAPanel.BorderTexture">
            <summary>
            If this is set, the XNAPanel will render itself on a separate render target.
            After the rendering is complete, it'll set this render target to be the
            primary render target.
            </summary>
        </member>
        <member name="F:Rampastring.XNAUI.XNAControls.XNAPanel.AlphaRate">
            <summary>
            The panel's transparency changing rate per 100 milliseconds.
            If the panel is transparent, it'll become non-transparent at this rate.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNATabControl">
            <summary>
            A control that has multiple tabs, of which only one can be selected at a time.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNATextPart">
            <summary>
            A part of a potentially long line of text.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNATextLine">
            <summary>
            A text line.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNATextRenderer">
            <summary>
            A text renderer.
            Takes <see cref="T:Rampastring.XNAUI.XNAControls.XNATextPart"/>s, automatically formats them, applied line
            breaks if necessary and renders them.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.XNAControls.XNATimerControl">
            <summary>
            A control that acts as a timer.
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.XNAControls.XNATimerControl.TimeElapsed">
            <summary>
            Raised after the time specified in Interval has passed.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.#ctor(Rampastring.XNAUI.WindowManager)">
            <summary>
            Creates a new timer.
            </summary>
            <param name="windowManager">The WindowManager associated with this control.</param>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATimerControl.Interval">
            <summary>
            The interval after which the TimeElapsed event is raised.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.XNATimerControl.AutoReset">
            <summary>
            If set, the timer will automatically restart after calling
            the TimeElapsed event.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the timer.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.Pause">
            <summary>
            Pauses the timer.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.Resume">
            <summary>
            Resumes a previously paused (with Pause()) timer.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.Start">
            <summary>
            Sets the timer to trigger after the time specified in the timer's Interval 
            and starts the timer.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.Accelerate(System.TimeSpan)">
            <summary>
            Lowers the time until the next event by the specified amount of time.
            </summary>
            <param name="timeSpan">The time.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.SetTime(System.TimeSpan)">
            <summary>
            Sets the time until the next TimeElapsed event.
            </summary>
            <param name="timeSpan">The time.</param>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.GetTime">
            <summary>
            Returns the current time until the next TimeElapsed event.
            </summary>
            <returns>The time until the next TimeElapsed event.</returns>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATimerControl.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            A dummy draw function. Doesn't actually do anything.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.XNAControls.XNATrackbar.OnMouseOnControl(Rampastring.XNAUI.XNAControls.MouseEventArgs)">
            <summary>
            Scrolls the scrollbar if the user presses the mouse left button
            while moving the cursor over the scrollbar.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.XNAControls.MouseEventArgs.RelativeLocation">
            <summary>
            The point of the mouse cursor relative to the control.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.Input.Cursor.LeftDown">
            <summary>
            Gets a value that indicates whether the left mouse button is held down
            on the current frame.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.Input.Cursor.LeftPressedDown">
            <summary>
            Gets a value that indicates whether the left mouse button was pressed
            down on this frame (meaning it's down on the current frame, but wasn't down
            on the previous frame).
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.Input.Cursor.RightPressedDown">
            <summary>
            Gets a value that indicates whether the right mouse button was pressed
            down on this frame (meaning it's down on the current frame, but wasn't down
            on the previous frame).
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.Input.Cursor.LoadNativeCursor(System.String)">
            <summary>
            Attemps to replace the native operating system pointer cursor with
            a cursor file from a specific path for the game window. If succesful,
            the cursor sprite is hidden, otherwise the cursor sprite remains visible.
            </summary>
            <param name="path">The path to the cursor (.cur) file.</param>
        </member>
        <member name="T:Rampastring.XNAUI.Input.KeyboardEventInput">
            <summary>
            Handles text input. XNA does not have a built-in system for text input.
            Note: MonoGame has a way of detecting text input,
            via the Game.Window.TextInput event:
            http://www.gamedev.net/topic/457783-xna-getting-text-from-keyboard/
            </summary>
        </member>
        <member name="E:Rampastring.XNAUI.Input.KeyboardEventInput.CharEntered">
            <summary>
            Event raised when a character has been entered.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.Input.KeyboardEventInput.Initialize(Microsoft.Xna.Framework.GameWindow)">
            <summary>
            Initialize the TextInput with the given GameWindow.
            </summary>
            <param name="window">The XNA window to which text input should be linked.</param>
        </member>
        <member name="T:Rampastring.XNAUI.Input.RKeyboard">
            <summary>
            A class for handling the keyboard.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.Renderer">
            <summary>
            Provides static methods for drawing.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.GetSafeString(System.String,System.Int32)">
            <summary>
            Returns a version of the given string where all characters that don't
            appear in the given font have been replaced with question marks.
            </summary>
            <param name="str">The string.</param>
            <param name="fontIndex">The index of the font.</param>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.GetStringWithLimitedWidth(System.String,System.Int32,System.Int32)">
            <summary>
            Returns a that has had its width limited to a specific number.
            Characters that'd cross over the width have been cut.
            </summary>
            <param name="str">The string to limit.</param>
            <param name="fontIndex">The index of the font to use.</param>
            <param name="maxWidth">The maximum width of the string.</param>
            <returns></returns>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.PushSettings(Rampastring.XNAUI.SpriteBatchSettings)">
            <summary>
            Pushes new settings into the renderer's internal stack and applies them.
            A call to <see cref="M:Rampastring.XNAUI.Renderer.PushSettings(Rampastring.XNAUI.SpriteBatchSettings)"/> should always
            be followed by <see cref="M:Rampastring.XNAUI.Renderer.PopSettings"/> once drawing with the new settings is done.
            </summary>
            <param name="settings">The sprite batch settings.</param>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.PopSettings">
            <summary>
            Pops previous settings from the renderer's internal stack and applies them.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.ChangeSettings(Rampastring.XNAUI.SpriteBatchSettings)">
            <summary>
            Changes current rendering settings. This can be called between 
            <see cref="M:Rampastring.XNAUI.Renderer.PushSettings(Rampastring.XNAUI.SpriteBatchSettings)"/> and <see cref="M:Rampastring.XNAUI.Renderer.PopSettings"/>
            when you want to draw something with new settings, but there's no reason 
            to save those settings.
            </summary>
            <param name="settings">The sprite batch settings.</param>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.BeginDraw">
            <summary>
            Prepares the renderer for drawing a batch of sprites.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.EndDraw">
            <summary>
            Draws the currently queued batch of sprites.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.DrawCircle(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Color,System.Int32,System.Int32)">
            <summary>
            Draws a circle's perimiter.
            </summary>
            <param name="position">The center point of the circle.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="color">The color of the circle.</param>
            <param name="precision">Defines how smooth the circle's perimiter is. 
            Larger values make the circle smoother, but have a larger effect on performance.</param>
            <param name="thickness">The thickness of the perimiter.</param>
        </member>
        <member name="M:Rampastring.XNAUI.Renderer.DrawCircleWithTexture(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Color,System.Int32,System.Single)">
            <summary>
            Draws a circle where the circle's perimeter is dotted with a texture.
            </summary>
            <param name="position">The center point of the circle.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="texture">The texture to dot the circle's perimiter with.</param>
            <param name="color">The remap color of the texture.</param>
            <param name="precision">How many times the texture is drawn on the perimiter.</param>
            <param name="scale">The scale of the drawn texture compared to the size of the texture itself.</param>
        </member>
        <member name="T:Rampastring.XNAUI.UISettings">
            <summary>
            A class that contains UI-related settings, like default UI colors.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.UISettings.ActiveSettings">
            <summary>
            The currently active UI settings.
            </summary>
        </member>
        <member name="T:Rampastring.XNAUI.WindowManager">
            <summary>
            Manages the game window and all of the game's controls
            inside the game window.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.GraphicsDeviceManager)">
            <summary>
            Creates a new WindowManager.
            </summary>
            <param name="game">The game.</param>
            <param name="graphics">The game's GraphicsDeviceManager.</param>
        </member>
        <member name="E:Rampastring.XNAUI.WindowManager.GameClosing">
            <summary>
            Raised when the game window is closing.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.Cursor">
            <summary>
            The input cursor.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.Keyboard">
            <summary>
            The keyboard.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.SoundPlayer">
            <summary>
            The SoundPlayer that is responsible for handling audio.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.WindowWidth">
            <summary>
            Returns the width of the game window.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.WindowHeight">
            <summary>
            Returns the height of the game window.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.RenderResolutionX">
            <summary>
            Returns the width of the back buffer.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.RenderResolutionY">
            <summary>
            Returns the height of the back buffer.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.HasFocus">
            <summary>
            Gets a boolean that determines whether the game window currently has input focus.
            </summary>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.SelectedControl">
            <summary>
            Gets or sets the control that is currently selected.
            Usually used for controls that need input focus, like text boxes.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.SetRenderResolution(System.Int32,System.Int32)">
            <summary>
            Sets the rendering (back buffer) resolution of the game.
            Does not affect the size of the actual game window.
            </summary>
            <param name="x">The width of the back buffer.</param>
            <param name="y">The height of the back buffer.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.RecalculateScaling">
            <summary>
            Re-calculates the scaling of the rendered screen to fill the window.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.CloseGame">
            <summary>
            Closes the game.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.RestartGame">
            <summary>
            Restarts the game.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.Initialize(Microsoft.Xna.Framework.Content.ContentManager,System.String)">
            <summary>
            Initializes the WindowManager.
            </summary>
            <param name="content">The game content manager.</param>
            <param name="contentPath">The path where the ContentManager should load files from (including SpriteFont files).</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.AddCallback(System.Delegate,System.Object[])">
            <summary>
            Schedules a delegate to be executed on the next game loop frame, 
            on the main game thread.
            </summary>
            <param name="d">The delegate.</param>
            <param name="args">The arguments to be passed on to the delegate.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.AddAndInitializeControl(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Adds a control into the WindowManager, on the last place
            in the list of controls.
            </summary>
            <param name="control">The control to add.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.AddControl(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Adds a control to the WindowManager, on the last place
            in the list of controls. Does not call the control's
            Initialize() method.
            </summary>
            <param name="control">The control to add.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.InsertAndInitializeControl(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Inserts a control into the WindowManager on the first place
            in the list of controls.
            </summary>
            <param name="control">The control to insert.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.CenterControlOnScreen(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Centers a control on the game window.
            </summary>
            <param name="control">The control to center.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.CenterOnScreen">
            <summary>
            Centers the game window on the screen.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.SetBorderlessMode(System.Boolean)">
            <summary>
            Enables or disables borderless windowed mode.
            </summary>
            <param name="value">A boolean that determines whether borderless 
            windowed mode should be enabled.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.FlashWindow">
            <summary>
            Flashes the game window on the taskbar.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.SetIcon(System.String)">
            <summary>
            Sets the icon of the game window to an icon that exists on a specific
            file path.
            </summary>
            <param name="path">The path to the icon file.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.GetWindowHandle">
            <summary>
            Returns the IntPtr handle of the game window on Windows.
            On other platforms, returns IntPtr.Zero.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.SetControlBox(System.Boolean)">
            <summary>
            Enables or disables the "control box" (minimize/maximize/close buttons) for the game form.
            </summary>
            <param name="value">True to enable the control box, false to disable it.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.PreventClosing">
            <summary>
            Prevents the user from closing the game form by Alt-F4.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.AllowClosing">
            <summary>
            Allows the user to close the game form by Alt-F4.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.RemoveControl(Rampastring.XNAUI.XNAControls.XNAControl)">
            <summary>
            Removes a control from the window manager.
            </summary>
            <param name="control">The control to remove.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.SetVSync(System.Boolean)">
            <summary>
            Enables or disables VSync.
            </summary>
            <param name="value">A boolean that determines whether VSync should be enabled or disabled.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.ReorderControls">
            <summary>
            Re-orders controls by their update order.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.InitGraphicsMode(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Attempt to set the display mode to the desired resolution.  Itterates through the display
            capabilities of the default graphics adapter to determine if the graphics adapter supports the
            requested resolution.  If so, the resolution is set and the function returns true.  If not,
            no change is made and the function returns false.
            </summary>
            <param name="iWidth">Desired screen width.</param>
            <param name="iHeight">Desired screen height.</param>
            <param name="bFullScreen">True if you wish to go to Full Screen, false for Windowed Mode.</param>
        </member>
        <member name="P:Rampastring.XNAUI.WindowManager.IsFullscreen">
            <summary>
            Returns whether the game is running in fullscreen mode.
            </summary>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the WindowManager. Do not call manually; MonoGame will call 
            this automatically on every game frame.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:Rampastring.XNAUI.WindowManager.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws all the visible controls in the WindowManager.
            Do not call manually; MonoGame calls this automatically.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
    </members>
</doc>
