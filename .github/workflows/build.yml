name: build client
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:
permissions:
  contents: write
jobs:
  calculate-version:
    name: Calculate Version
    runs-on: windows-latest
    outputs:
      AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}
      AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}
      InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}
      SemVer: ${{ steps.gitversion.outputs.SemVer }}
      PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}
      Sha: ${{ steps.gitversion.outputs.Sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@main
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@main
  publish:
    name: Publish
    runs-on: windows-latest
    needs: calculate-version
    env:
      AssemblySemVer: ${{ needs.calculate-version.outputs.AssemblySemVer }}
      AssemblySemFileVer: ${{ needs.calculate-version.outputs.AssemblySemFileVer }}
      InformationalVersion: ${{ needs.calculate-version.outputs.InformationalVersion }}
      SemVer: ${{ needs.calculate-version.outputs.SemVer }}
      Sha: ${{ needs.calculate-version.outputs.Sha }}
    strategy:
      matrix:
        game: [Ares,TS,YR]
        framework: [net8.0, net48]
    steps:
    - uses: actions/checkout@main
      with:
        ref: ${{ env.Sha }}
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@main
      with:
        dotnet-version: '8.x.x'
    - name: Build ${{matrix.game}}
      run: ./BuildScripts/Build-${{matrix.game}}.ps1 Release ${{matrix.framework}} ${{env.AssemblySemVer}} ${{env.AssemblySemFileVer}} ${{env.InformationalVersion}}
      shell: pwsh
    - name: Zip
      run: 7z a -r "${{ format('{0}-v{1}-{2}.zip', matrix.game, env.SemVer, matrix.framework) }}" "./Compiled/${{matrix.game}}/${{matrix.framework}}/*.*" "-x!*.xml"
    - name: Upload Artifacts
      uses: actions/upload-artifact@main
      with:
        name: ${{matrix.game}}-${{matrix.framework}}
        path: ${{ format('{0}-v{1}-{2}.zip', matrix.game, env.SemVer, matrix.framework) }}
        if-no-files-found: error
  release:
    name: Release
    if: github.event_name == 'workflow_dispatch'
    needs: [calculate-version, publish]
    env:
      PreReleaseTag: ${{ needs.calculate-version.outputs.PreReleaseTag }}
      SemVer: ${{ needs.calculate-version.outputs.SemVer }}
      Sha: ${{ needs.calculate-version.outputs.Sha }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: ${{ env.Sha }}
      - name: Download Artifacts
        uses: actions/download-artifact@main
        with:
          path: ./artifacts
      - name: Release
        run: gh release create ${{ format('v{0}', env.SemVer) }} (Get-Item ./artifacts/*/*.zip) --generate-notes --target ${{ github.sha }} ${{ env.PreReleaseTag != '' && '--prerelease' || '' }}
        env:
          GH_TOKEN: ${{ github.token }}