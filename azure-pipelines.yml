# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- azure-pipelines

pool:
  vmImage: 'windows-latest'

steps:

# build Yuri's Revenge using the BuildYR.bat file
- task: BatchScript@1
  displayName: "Build YR"
  inputs:
    filename: '$(Build.SourcesDirectory)/BuildScripts/BuildYR.bat'
    workingFolder: '$(Build.SourcesDirectory)/BuildScripts'

# archive the Compiled folder for Yuri's Revenge to a YR.zip file
- task: ArchiveFiles@2
  displayName: "Archive Compiled YR"
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/Compiled'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/YR.zip'
    replaceExistingArchive: true

# build Ares using the BuildAres.bat
- task: BatchScript@1
  displayName: "Build Ares"
  inputs:
    filename: '$(Build.SourcesDirectory)/BuildScripts/BuildAres.bat'
    workingFolder: '$(Build.SourcesDirectory)/BuildScripts'

# archive the Compiled folder for Ares to a Ares.zip file
- task: ArchiveFiles@2
  displayName: "Archive Compiled Ares"
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/Compiled'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Ares.zip'
    replaceExistingArchive: true

# build TS using the BuildTS.bat
- task: BatchScript@1
  displayName: "Build TS"
  inputs:
    filename: '$(Build.SourcesDirectory)/BuildScripts/BuildTS.bat'
    workingFolder: '$(Build.SourcesDirectory)/BuildScripts'

# archive the Compiled folder for TS to a TS.zip file
- task: ArchiveFiles@2
  displayName: "Archive Compiled TS"
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/Compiled'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/TS.zip'
    replaceExistingArchive: true
  
# publish all zips to Azure artifacts
- task: PublishBuildArtifacts@1
  displayName: "Publish compiled artifacts"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'clients'
    publishLocation: 'Container'
